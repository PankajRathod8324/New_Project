@model DAL.ViewModel.MenuModifierGroupVM

<form id="editModifierGroupForm">
    <div class="modal-body">
        <input type="hidden" asp-for="ModifierGroupId">

        <div class="form-floating mb-3">
            <input type="text" asp-for="ModifierGroupName" class="form-control">
            <label asp-for="ModifierGroupName">Name*</label>
        </div>

        <div class="form-outline mb-4">
            <textarea class="form-control" asp-for="ModifierGroupDecription" rows="4"></textarea>
        </div>

        <div class="mb-3">
            <h6>Selected Modifiers:</h6>
            <div id="selectedModifiersList" class="d-flex flex-wrap gap-2">
                @foreach (var modifier in Model.Modifiers)
                {
                    <div class="border border-dark rounded px-3 py-1 d-flex align-items-center bg-light me-2"
                        data-id="@modifier.ModifierId">
                        <span class="me-2">@modifier.ModifierName</span>
                        <span class="text-danger remove-modifier" style="cursor: pointer;">
                            <i class="fas fa-times"></i>
                        </span>
                    </div>
                }
            </div>
            <input type="hidden" asp-for="ModifierIds">
        </div>

        <!-- Button to Add Modifier -->
        <button type="button" class="btn btn-outline-primary mt-2" data-id="@Model.ModifierGroupId" id="addModifierBtn">
            <i class="fas fa-plus"></i> Add Modifier
        </button>

        <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        </div>
    </div>
</form>

<!-- Modifier Selection Modal -->
<div class="modal fade" id="allModifiersModal" tabindex="-1" aria-labelledby="allModifiersLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="allModifiersLabel">Select Modifiers</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <input type="text" id="searchQuery" class="form-control mb-3" placeholder="Search Modifier">
                <div id="modifierTableContainer">
                    <table id="modifierTable" class="table align-middle table-hover bg-white">
                        <!-- Partial view will be loaded here -->
                    </table>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="addSelectedModifiers"
                    onclick="AddModifiersToModal()">Add Selected</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        console.log("Hello");
        $(".pagination-btn-edit").click(function (e) {
            e.preventDefault();
            let page = $(this).data("page");
            console.log("Page number:", page);
            loadModifiers(page);
        });
    });

    $(document).on('click', '#addModifierBtn', function () {
        let modifierGroupId = $(this).data('id');
        console.log("Modifier Group ID:", modifierGroupId);
        $.ajax({
            url: '/Menu/GetEditAllModifier',
            type: 'GET',
            data: { modifierGroupId: modifierGroupId },
            beforeSend: function () {
                $('#modifierTableContainer').html('<p class="text-center">Loading...</p>');
            },
            success: function (data) {
                $('#modifierTableContainer').html(data);
                var myModal = new bootstrap.Modal(document.getElementById('allModifiersModal'));
                myModal.show();
            },
            error: function (xhr) {
                console.error('Error fetching modifier list:', xhr.responseText);
            }
        });
    });

    $('#allModifiersModal').on('hidden.bs.modal', function (e) {
        console.log('Modal closed');
    });

    function AddModifiersToModal() {
        if (!window.editSelectedModifiers || window.editSelectedModifiers.length === 0) {
            console.warn("No selected modifiers found.");
            return;
        }

        console.log("Selected Modifiers Across Pages: ", window.editSelectedModifiers);
        updatePreviousModal();

        // Close the modal properly
        var myModal = new bootstrap.Modal(document.getElementById('allModifiersModal'));
        myModal.hide();
        console.log(myModal);

    }

    function updatePreviousModal() {
        let selectedHtml = "";
        let hiddenInputsContainer = $('#selectedModifierInputs');

        $('#selectedModifiersList').empty();
        hiddenInputsContainer.empty();

        window.editSelectedModifiers.forEach(modifier => {
            let modifierElement = `
                <div class="border border-dark rounded px-3 py-1 d-flex align-items-center bg-light me-2" data-id="${modifier.modifierId}">
                    <span class="me-2">${modifier.name}</span>
                    <span class="text-danger remove-modifier" style="cursor: pointer;">
                        <i class="fas fa-times"></i>
                    </span>
                </div>
            `;
            $('#selectedModifiersList').append(modifierElement);
            hiddenInputsContainer.append(`<input type="hidden" name="ModifierIds" value="${modifier.modifierId}">`);
        });

        // Handle Removal of Modifiers from Modal
        $('.remove-modifier').off('click').on('click', function () {
            let parentDiv = $(this).parent();
            let modifierId = parseInt(parentDiv.attr('data-id'));

            // Remove from selectedModifiers array
            window.editSelectedModifiers = window.editSelectedModifiers.filter(modifier => modifier.modifierId !== modifierId);

            // Remove from UI and hidden input fields
            parentDiv.remove();
            hiddenInputsContainer.find(`input[value="${modifierId}"]`).remove();

            console.log("After removal: ", window.editSelectedModifiers);
        });
    }
</script>
